/** Docs:
 * @link https://webpack.github.io/docs/webpack-dev-server.html
 *
 * VERY recommended to read:
 * @link https://medium.com/@rajaraodv/webpacks-hmr-react-hot-loader-the-missing-manual-232336dc0d96#.1ngr5wlce
 *
 * HMR in details:
 * @link https://webpack.github.io/docs/hot-module-replacement-with-webpack.html#tutorial
 * @link https://webpack.github.io/docs/hot-module-replacement.html
 */
import sysPath from "path"

import webpack from "webpack"
import settings from "./settings"
const { hosts } = settings.env

import HtmlWebpackPlugin from "html-webpack-plugin"
import HtmlWebpackPluginTemplate from "html-webpack-template"

import { merge } from "./utils"
import base from "./browser"

export default merge({}, base, {
  devServer: {
    host: hosts.dev.hostname,
    port: hosts.dev.port,

    // From where static content is served
    contentBase: settings.paths.assets,

    stats: {
      colors: true,
      chunkModules: false, // a list of modules is huge and so useless
    },

    // This is needed to tell *server* to enable HMR functionality
    // In CLI the "--hot" option is responsible for this.
    // But we don't use CLI options, see below, why.
    hot: true,

    proxy: [
      ...(!hosts.api ? [] : [{
        context: sysPath.join(settings.web.api, "**"),
        target: hosts.api.href,
        headers: {
          host: hosts.api.host,
        },
      }]),

      ...(!hosts.static ? [] : [{
        context: sysPath.join(settings.web.static, "**"),
        target: hosts.static.href,
        headers: {
          host: hosts.static.host,
        },
      }]),
    ],
  },

  // Force it to "/", so index.html, generated by HtmlWebpackPlugin,
  // is loaded from server root, emulating regular site's home page
  output: {
    publicPath: "/",
  },

  plugins: [
    // @link https://github.com/jaketrent/html-webpack-template#basic-usage
    new HtmlWebpackPlugin({
      template: HtmlWebpackPluginTemplate,
      inject: false, // for this template default injection feature is not needed

      favicon: sysPath.join(settings.paths.assets, "favicon.ico"),
      appMountId: "container",
    }),

    // This is needed to enable generating patches.
    // In CLI the "--hot" option adds it automatically.
    // But we don't use CLI options, see below, why.
    // (make sure you don't run this config with "--hot" option, or plugin will be added twice and everything will explode)
    new webpack.HotModuleReplacementPlugin(),
  ],

  entry: {
    [settings.paths.bundles.vendor]: [
      // This is client-side part of HMR system, which handles messages from dev-server (essentially, a websocket client).
      // In CLI it's injected to entries automatically when "--inline" options is used.
      // But we don't use CLI options, see below, why.
      `webpack-dev-server/client?${hosts.dev.href}`,

      // And, finally, this is the part, responsible for applying patches to our modules.
      // It is also automatically injected with "--inline" CLI option,
      // BUT: CLI injects "webpack/hot/dev-server" file, which totally reloads page when it can't apply hot update:
      // @link https://github.com/webpack/webpack/issues/418
      // The only way to avoid this behavior is to reject using CLI and switch to this verbose config.
      // @link https://github.com/webpack/webpack/issues/418#issuecomment-54288041
      "webpack/hot/only-dev-server",
    ],
  },
})
